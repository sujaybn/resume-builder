# FROM python:3.9-slim
# WORKDIR /app
# COPY requirements.txt .
# # RUN pip install --no-cache-dir --upgrade pip && \
# #     pip install --no-cache-dir fastapi uvicorn && \
# #     pip install --no-cache-dir python-dotenv \
# #     pip install --no-cache-dir -r requirements.txt
#    RUN pip install --no-cache-dir --upgrade pip && \
#     pip install --no-cache-dir fastapi uvicorn python-dotenv && \
#     pip install --no-cache-dir -r requirements.txt
# # RUN pip install -r requirements.txt


# COPY . .
# CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "80"]



# FROM python:3.9-slim
# WORKDIR /app
# COPY requirements.txt .
# RUN pip install --no-cache-dir --upgrade pip && \
#     pip install --no-cache-dir fastapi uvicorn python-dotenv && \
#     pip install --no-cache-dir -r requirements.txt
# COPY . .
# CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "80"]


#Final docker file 

# FROM python:3.9-slim

# WORKDIR /app

# # Create a non-root user
# RUN useradd -m appuser && chown -R appuser:appuser /app
# USER appuser

# # Install dependencies
# COPY requirements.txt .
# RUN pip install --no-cache-dir --upgrade pip && \
#     pip install --no-cache-dir -r requirements.txt

# # Copy the app
# COPY --chown=appuser:appuser . .

# CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "80"]


#Chat GPT fix
# Use an official Python image
FROM python:3.10

# Set working directory
WORKDIR /app

# Copy all files to the container
COPY . .

# Install dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir fastapi uvicorn && \
    pip install --no-cache-dir -r requirements.txt

# Expose port for FastAPI
EXPOSE 8000

# Start FastAPI with Uvicorn
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
